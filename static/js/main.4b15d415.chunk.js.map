{"version":3,"sources":["components/basic/Button.tsx","components/basic/Divider.tsx","components/basic/FadeIn.tsx","components/basic/Stepper.tsx","components/Footer.tsx","components/sections/section1/ScrollIndicator.tsx","components/sections/section1/TextPanel.tsx","components/sections/section1/Section1.tsx","App.tsx","theme.ts","serviceWorker.ts","index.tsx"],"names":["StyledButton","styled","button","theme","color","main","dark","Label","span","Button","props","children","onClick","Divider","div","Container","animatedIn","direction","css","sleep","ms","Promise","resolve","setTimeout","FadeIn","delay","useState","setAnimatedIn","animate","value","a","useEffect","Dot","active","color1","gray","Stepper","activeStep","steps","dots","i","push","StyledFooter","footer","MUIContainer","GridContainer","Grid","Text","p","SocialMediaButton","IconButton","Footer","maxWidth","container","spacing","item","xs","md","aria-label","href","target","rel","scroll","keyframes","Mouse","Wheel","ScrollIndicator","First","Second","Third","Fourth","TextPanel","Root","ImageContainer","Image","img","GridItem","ScrollIndicatorContainer","Section1","gridJustify","useMediaQuery","id","justify","srcSet","process","type","src","alt","Section2","lazy","Section3","Section4","Menu","App","fallback","veryLight","light","color2","color3","color4","white","black","success","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.4b15d415.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface ButtonProps {\r\n  color: string;\r\n}\r\n\r\nconst StyledButton = styled.button<ButtonProps>`\r\n  height: 48px;\r\n  width: 192px;\r\n  margin: 16px 0;\r\n  border: none;\r\n  border-radius: 48px;\r\n  cursor: pointer;\r\n  transition: 0.2s all;\r\n  background-color: ${({ theme, color }) => theme[color].main};\r\n  &:hover {\r\n    background-color: ${({ theme, color }) => theme[color].dark};\r\n    transform: scale(1.08);\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  font-size: 18px;\r\n  color: #fff;\r\n  font-weight: 500;\r\n`;\r\n\r\ninterface Props extends React.HTMLProps<HTMLButtonElement> {\r\n  children?: React.ReactNode;\r\n  color?: string; // TODO: Should be key of colors\r\n}\r\n\r\nfunction Button(props: Props) {\r\n  const { children = \"\", color = \"color1\", onClick } = props;\r\n\r\n  return (\r\n    <StyledButton color={color} onClick={onClick}>\r\n      <Label>{children}</Label>\r\n    </StyledButton>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst Divider = styled.div`\r\n  height: 1px;\r\n  background-color: rgba(255, 255, 255, 0.7);\r\n  margin: 16px;\r\n`;\r\n\r\n// TODO: Add different variant options\r\n\r\nexport default Divider;\r\n","import React, { useEffect, useState, ReactNode } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ninterface ContainerProps {\r\n  animatedIn: boolean;\r\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\r\n}\r\n\r\nconst Container = styled.div<ContainerProps>`\r\n  display: flex;\r\n  transition: 1s all;\r\n\r\n  opacity: ${({ animatedIn }) => (animatedIn ? 1 : 0)};\r\n  transform: ${({ animatedIn, direction }) =>\r\n    animatedIn\r\n      ? css`translate(0px)`\r\n      : direction === \"up\"\r\n      ? css`translateY(-30px)`\r\n      : direction === \"down\"\r\n      ? css`translateY(30px)`\r\n      : direction === \"left\"\r\n      ? css`translateX(-30px)`\r\n      : css`translateX(30px)`};\r\n`;\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n  delay?: number;\r\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\r\n}\r\n\r\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nfunction FadeIn(props: Props) {\r\n  const { delay = 0, direction = \"up\" } = props;\r\n  const [animatedIn, setAnimatedIn] = useState(false);\r\n\r\n  const animate = async (value: boolean, delay: number) => {\r\n    await sleep(delay);\r\n    setAnimatedIn(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    animate(true, delay);\r\n  }, [delay]);\r\n\r\n  return (\r\n    <Container animatedIn={animatedIn} direction={direction}>\r\n      {props.children}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FadeIn;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  activeStep?: number;\r\n  steps: number;\r\n}\r\n\r\ninterface DotProps {\r\n  active: boolean;\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  bottom: 0;\r\n  & > * {\r\n    margin: 4px;\r\n  }\r\n`;\r\n\r\nconst Dot = styled.div<DotProps>`\r\n  background-color: ${({ active, theme }) =>\r\n    active ? theme.color1.main : theme.gray};\r\n  height: 8px;\r\n  width: 8px;\r\n  border-radius: 8px;\r\n  transition: 0.1s transform;\r\n  transform: ${({ active }) => (active ? \"scale(1.2)\" : \"scale(1)\")};\r\n`;\r\n\r\nfunction Stepper(props: Props) {\r\n  const { activeStep = 0, steps } = props;\r\n\r\n  const dots = [];\r\n  for (let i = 0; i < steps; i++) {\r\n    dots.push(<Dot key={i} active={activeStep === i} />);\r\n  }\r\n\r\n  return <Container>{dots}</Container>;\r\n}\r\n\r\nexport default Stepper;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MUIContainer from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GitHub from \"@material-ui/icons/GitHub\";\r\nimport Instagram from \"@material-ui/icons/Instagram\";\r\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\r\n\r\nconst StyledFooter = styled.footer`\r\n  background-color: #3d28a4;\r\n`;\r\n\r\nconst Container = styled(MUIContainer)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 8px 48px;\r\n`;\r\n\r\nconst GridContainer = styled(Grid)`\r\n  padding: 16px 0;\r\n  text-align: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: #fff;\r\n`;\r\n\r\nconst SocialMediaButton = styled(IconButton)`\r\n  > * {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <StyledFooter>\r\n      <Container maxWidth=\"md\">\r\n        <GridContainer container spacing={2}>\r\n          <Grid item xs={12} md={6}>\r\n            <Text>© 2021 Kalle Rouvinen. All rights reserved.</Text>\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <a\r\n              aria-label=\"link-to-instagram\"\r\n              href=\"https://instagram.com/kallerouvinen\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              <SocialMediaButton aria-label=\"link-to-instagram\">\r\n                <Instagram />\r\n              </SocialMediaButton>\r\n            </a>\r\n            <a\r\n              aria-label=\"link-to-linkedin\"\r\n              href=\"https://linkedin.com/in/kalle-rouvinen-794b4215b\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              <SocialMediaButton aria-label=\"link-to-linkedin\">\r\n                <LinkedIn />\r\n              </SocialMediaButton>\r\n            </a>\r\n            <a\r\n              aria-label=\"link-to-github\"\r\n              href=\"https://github.com/kallerouvinen\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              <SocialMediaButton aria-label=\"link-to-github\">\r\n                <GitHub />\r\n              </SocialMediaButton>\r\n            </a>\r\n          </Grid>\r\n        </GridContainer>\r\n      </Container>\r\n    </StyledFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst scroll = keyframes`\r\n  0% { transform: scaleY(1) translateY(-9px) }\r\n  100% { transform: scaleY(0.8) translateY(0px) }\r\n`;\r\n\r\nconst Mouse = styled.div`\r\n  display: flex;\r\n  height: 35px;\r\n  width: 20px;\r\n  border-radius: 15px;\r\n  border: solid 2px #fc466b;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Wheel = styled.div`\r\n  height: 10px;\r\n  width: 4px;\r\n  border-radius: 50%;\r\n  background-color: #fc466b;\r\n  animation: ${scroll} 0.9s ease infinite alternate;\r\n`;\r\n\r\nfunction ScrollIndicator() {\r\n  return (\r\n    <Mouse>\r\n      <Wheel />\r\n    </Mouse>\r\n  );\r\n}\r\n\r\nexport default ScrollIndicator;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { FadeIn } from \"components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-width: 310px;\r\n`;\r\n\r\nconst First = styled.span`\r\n  font-family: \"Roboto\";\r\n  font-size: 26vw;\r\n  color: #3f5efb;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  text-transform: uppercase;\r\n  @media (min-width: 800px) {\r\n    font-size: 208px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 14.77vw;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    font-size: 189px;\r\n  }\r\n`;\r\n\r\nconst Second = styled.span`\r\n  font-family: \"Roboto\";\r\n  font-size: 22.875vw;\r\n  color: #7e56cb;\r\n  font-weight: 700;\r\n  line-height: 1.2;\r\n  text-transform: uppercase;\r\n  @media (min-width: 800px) {\r\n    font-size: 183px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 12.97vw;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    font-size: 166px;\r\n  }\r\n`;\r\n\r\nconst Third = styled.span`\r\n  font-family: \"Roboto\";\r\n  font-size: 11.63vw;\r\n  color: #bd4e9b;\r\n  font-weight: 700;\r\n  line-height: 1.3;\r\n  text-transform: uppercase;\r\n  @media (min-width: 800px) {\r\n    font-size: 93px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 6.56vw;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    font-size: 84px;\r\n  }\r\n`;\r\n\r\nconst Fourth = styled.span`\r\n  font-family: \"Roboto\";\r\n  font-size: 13.38vw;\r\n  color: #fc466b;\r\n  font-weight: 700;\r\n  line-height: 1.3;\r\n  text-transform: uppercase;\r\n  @media (min-width: 800px) {\r\n    font-size: 107px;\r\n  }\r\n  @media (min-width: 960px) {\r\n    font-size: 7.5vw;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    font-size: 96px;\r\n  }\r\n`;\r\n\r\nfunction TextPanel() {\r\n  return (\r\n    <Container>\r\n      <FadeIn delay={0} direction=\"up\">\r\n        <First>Hi, I'm</First>\r\n      </FadeIn>\r\n      <FadeIn delay={0} direction=\"left\">\r\n        <Second>Kalle,</Second>\r\n      </FadeIn>\r\n      <FadeIn delay={0} direction=\"right\">\r\n        <Third>a software</Third>\r\n      </FadeIn>\r\n      <FadeIn delay={0} direction=\"down\">\r\n        <Fourth>developer</Fourth>\r\n      </FadeIn>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TextPanel;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MUIContainer from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport { FadeIn } from \"components\";\r\nimport ScrollIndicator from \"./ScrollIndicator\";\r\nimport TextPanel from \"./TextPanel\";\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  min-height: 100%;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Container = styled(MUIContainer)`\r\n  display: flex;\r\n`;\r\n\r\nconst GridContainer = styled(Grid)`\r\n  height: 100%;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  opacity: 0.1;\r\n  @media (min-width: 960px) {\r\n    left: calc(25% - 30vh);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  height: 85vh;\r\n  object-fit: contain;\r\n  @media (min-width: 1280px) {\r\n    height: 90vh;\r\n  }\r\n`;\r\n\r\nconst GridItem = styled(Grid)`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-bottom: 60px;\r\n`;\r\n\r\nconst ScrollIndicatorContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  align-self: center;\r\n`;\r\n\r\nfunction Section1() {\r\n  const mdUp = useMediaQuery(\"(min-width:960px)\");\r\n  const gridJustify = mdUp ? \"flex-end\" : \"center\";\r\n\r\n  // TODO: Add multiple scaled images depending on screen size\r\n\r\n  return (\r\n    <Root id=\"section1\">\r\n      <Container maxWidth=\"xl\">\r\n        <GridContainer container justify={gridJustify}>\r\n          <ImageContainer>\r\n            <FadeIn delay={0} direction=\"down\">\r\n              <picture>\r\n                <source\r\n                  srcSet={`${process.env.PUBLIC_URL}/assets/image900.webp`}\r\n                  type=\"image/webp\"\r\n                />\r\n                <Image\r\n                  src={`${process.env.PUBLIC_URL}/assets/image900.jpg`}\r\n                  alt=\"\"\r\n                />\r\n              </picture>\r\n            </FadeIn>\r\n          </ImageContainer>\r\n          <GridItem item md={6}>\r\n            <TextPanel />\r\n          </GridItem>\r\n        </GridContainer>\r\n      </Container>\r\n      <ScrollIndicatorContainer>\r\n        <FadeIn delay={1000} direction=\"down\">\r\n          <ScrollIndicator />\r\n        </FadeIn>\r\n      </ScrollIndicatorContainer>\r\n    </Root>\r\n  );\r\n}\r\n\r\nexport default Section1;\r\n","import React, { lazy, Suspense } from \"react\";\r\n\r\nimport Section1 from \"components/sections/section1/Section1\";\r\n\r\nconst Section2 = lazy(() => import(\"components/sections/section2/Section2\"));\r\nconst Section3 = lazy(() => import(\"components/sections/section3/Section3\"));\r\nconst Section4 = lazy(() => import(\"components/sections/section4/Section4\"));\r\nconst Footer = lazy(() => import(\"components/Footer\"));\r\nconst Menu = lazy(() => import(\"components/sections/menu/Menu\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Section1 />\r\n      <Suspense fallback={null}>\r\n        <Section2 />\r\n        <Section3 />\r\n        <Section4 />\r\n        <Footer />\r\n        <Menu />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const theme = {\r\n  color1: {\r\n    veryLight: \"#d7defe\",\r\n    light: \"#5a75fc\",\r\n    main: \"#3f5efb\",\r\n    dark: \"#284bfb\",\r\n  },\r\n  color2: {\r\n    light: \"#8f6bd1\",\r\n    main: \"#7e56cb\",\r\n    dark: \"#7144c5\",\r\n  },\r\n  color3: {\r\n    light: \"#c45fa6\",\r\n    main: \"#bd4e9b\",\r\n    dark: \"#af418e\",\r\n  },\r\n  color4: {\r\n    light: \"#fd5e7e\",\r\n    main: \"#fc466b\",\r\n    dark: \"#fc2c56\",\r\n  },\r\n  white: \"#fff\",\r\n  gray: \"#d9d9d9\",\r\n  black: \"#000\",\r\n\r\n  success: \"#5cb85c\",\r\n  error: \"#eb4034\",\r\n};\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/// <reference types=\"styled-components/cssprop\" />\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\n\r\nimport App from \"./App\";\r\nimport theme from \"./theme\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}